
= ru(b)ac

== Synopsis 

   A ruby backup front-end powered by rsync that can save
   multiple backup profiles between uses.

== Usage 

   rubac [options]

   For help use: rubac -h

== Options

   -g, --global            Apply includes, excludes, options etc., to global settings 
   -p, --profile [NAME]    Name of backup profile (default is rubac), list profiles without NAME
   -D, --datadir PATH      Configuration directory (if root /etc/rubac otherwise ~/.rubac)

   -c, --client HOST       Client to backup (default is localhost), can specify multiple clients
   -a, --address HOST      Set the client host address (default is the client name)
   -i, --include PATH      Include path, comma separate multiple paths
   -x, --exclude PATH      Exclude path, comma separate multiple paths
   -o, --opts OPTS         Extra rsync options
       --delete            Delete any specified includes, excludes, opts
       --delete [client]   Delete the specified client configuration (does not purge the backups)
   -d, --dest DEST         Local destination path (eg., /mnt/backup)

   -L, --logdir PATH       Directory for logging (root default is /var/log/rubac, otherwise TMP/rubac)
       --log [NAME]        TODO Name of log file, (default is rubac.%Y-%m-%d.log)  - allow date/time formats 
   -m, --mail EMAIL        Notification email, comma separated list
       --smtp SERVER       IP Address of smtp server (default is localhost)
   -y, --syslog            TODO Use syslog for logging [??] [probably not since we have privlog]

   -l, --list [compact]    List the includes, excludes, etc., for the named profile
   -u, --update            Perform update backup, no incremental backups
   -I, --incremental NUM   Number of incremental backups (default is 5)
   -r, --run               Run specified profile
   -s, --snapshot NAME     Created a snapshot based on most recent backup
   -n, --dry-run           Perform a trial run of the backup
   -z, --compress          Compress the file data during backup

   -H, --history [INDEX]   Backup history, or specify index to see backup details
   -P, --prune             Delete the selected backup or snapshot (TODO)
       --select [NAME]     TODO Select a backup for pruning or restoring (special names: newest, oldest)
   -R, --restore [PATH]    Restore path, choose the backup with --select
       --restore-to PATH   Restore to the given host:path (default is client:/TMP)
       --restore-from FILE Restore file list from the given file (comma or new line delimited)
   -S, --search PATTERN    Search for the given glob in the backup history, optionally restore files found using restore without a path

   -h, --help              Displays help
       --examples          Displays examples
   -v, --version           Display the version
   -q, --quiet             Output as little as possible, overrides verbose
   -V, --verbose           Verbose output

== Examples

 Setup and use a backup on client esme,

   rubac -c esme -g -o "--acls --xattrs"
   rubac -c esme -i "/home/homer,/home/marge,/home/bart" -x "*/.gvfs/"
   rubac -c esme -x "*/.thumbnails/,*/.thunderbird/*/ImapMail/,*/.beagle/"
   rubac -c esme -m backupadmin@mail.host
   rubac -c esme -l /var/log/rubac
   ...
   rubac -c esme --run
   rubac -c esme --update

 List then show history of client esme
   rubac -c esme --list compact
   rubac -c esme --history

 Search for all files named .bashrc
   rubac -c esme --search '.bashrc$'

 Restore all files named file.dat to the local tmp directory instead of esme:/tmp
   rubac -c esme --restore-to=localhost:/tmp --select rubac.2010-01-29_10-40-29 --restore file.dat

 Restore the directory /home/homer/Desktop in place to esme:/
   rubac -c esme --restore-to=esme:/ --restore /home/homer/Desktop/$

 Search for all ogg vorbis files and restore them to /tmp
   rubac -c esme --restore --restore-to=/tmp --search 'caravan.palace'

